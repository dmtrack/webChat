{"version":3,"sources":["app/api/fake.api/chat.api.js","app/api/fake.api/comments.api.js","app/api/index.js","app/components/page/chatPageList/chatListPageNew.jsx","app/components/ui/chatCard.jsx","app/utils/displayDate.js","app/api/fake.api/users.api.js","app/utils/sessionStorage.service.js","app/components/common/comments/comment.jsx","app/components/common/comments/commentsList.jsx","app/components/common/form/textAreaField.jsx","app/components/common/comments/addCommentForm.jsx","app/components/common/comments/index.js","app/components/ui/comments.jsx","app/components/ui/navBar.jsx","app/components/page/chatPage/index.js","app/components/page/chatPage/chatPage.jsx","app/layouts/chats.jsx","app/components/common/form/textField.jsx","app/components/common/form/selectField.jsx","app/components/ui/registerFormNew.jsx","app/utils/validator.js","app/utils/getRandomAvatar.js","app/layouts/main.jsx","app/layouts/register.jsx","app/App.js","index.js"],"names":["localStorage","getItem","setItem","JSON","stringify","_id","name","image","fetchAll","Promise","resolve","window","setTimeout","parse","getById","id","find","chat","update","data","chats","chatIndex","findIndex","c","comments","userId","pageId","content","created_at","API","fetchCommentsForChat","chatId","filter","add","newComment","Date","now","Math","random","toString","substr","push","remove","newComments","x","console","log","ChatListPageNew","useState","setChats","useEffect","api","then","className","map","to","ChatCard","src","width","displayDate","date","parseInt","dateNow","getFullYear","getDate","getHours","minutesDif","getMinutes","toLocaleString","month","getMonth","users","CURRENT_USER","authUser","userData","sessionStorage","getUser","obj","Comment","created","onRemove","currentUser","user","u","getUserById","setChat","isLoading","setIsLoading","substring","alt","height","onClick","CommentsList","comment","TextAreaField","value","onChange","error","target","defaultProps","type","initialData","AddCommentForm","onSubmit","setData","errors","setErrors","e","preventDefault","prevState","label","Comments","useParams","setComments","addEventListener","removeEventListener","alert","sortedComments","orderBy","style","maxHeight","NavBar","aria-current","ChatPage","Chats","TextField","showPassword","setShowPassword","htmlFor","SelectField","defaultOption","options","optionsArray","Array","isArray","Object","values","disabled","length","option","RegisterForm","history","useHistory","arrayOfChats","keys","handleChange","validatorConfig","isRequired","message","min","validate","config","validateMethod","statusValidate","trim","test","fieldName","validator","isValid","newData","newUser","addUser","Main","Register","isAuth","App","path","component","exact","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.2ea1bf9a.chunk.js","sourcesContent":["const chats = [\n    {\n        _id: \"67rdca3eeb7f6fgeed471815\",\n        name: \"JavaScript\",\n        image: \"https://www.svgrepo.com/show/327372/logo-javascript.svg\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471816\",\n        name: \"nodeJS\",\n        image: \"https://seeklogo.com/images/N/nodejs-logo-D26404F360-seeklogo.com.png\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471817\",\n        name: \"Java\",\n        image: \"https://seeklogo.com/images/J/java-logo-7F8B35BAB3-seeklogo.com.png\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471818\",\n        name: \"PHP\",\n        image: \"https://cdn4.iconfinder.com/data/icons/scripting-and-programming-languages/512/php-512.png\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471819\",\n        name: \"Ruby\",\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f7/Devicon-ruby-plain.svg/1200px-Devicon-ruby-plain.svg.png\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471820\",\n        name: \"С++\",\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/ISO_C%2B%2B_Logo.svg/306px-ISO_C%2B%2B_Logo.svg.png\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471821\",\n        name: \"Kotlin\",\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/37/Kotlin_Icon_2021.svg/2048px-Kotlin_Icon_2021.svg.png\"\n    }\n];\nif (!localStorage.getItem(\"chats\")) {\n    localStorage.setItem(\"chats\", JSON.stringify(chats));\n}\n\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(JSON.parse(localStorage.getItem(\"chats\")));\n        }, 2000);\n    });\nconst update = (id, data) =>\n    new Promise((resolve) => {\n        const chats = JSON.parse(localStorage.getItem(\"chats\"));\n        const chatIndex = chats.findIndex((c) => c._id === id);\n        chats[chatIndex] = { ...chats[chatIndex], ...data };\n        localStorage.setItem(\"chats\", JSON.stringify(chats));\n        resolve(chats[chatIndex]);\n    });\n\nconst getById = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"chats\")).find(\n                    (chat) => chat._id === id\n                )\n            );\n        }, 1000);\n    });\nexport default {\n    fetchAll,\n    getById,\n    update\n};\n","const comments = [\n    {\n        _id: \"67rdca3eeb7f6fg\",\n        userId: \"67rdca3eeb7f6fg1\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"I love JS\",\n        created_at: \"1633576399367\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdasd\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        userId: \"67rdca3eeb7f6fgdasd2\",\n        content: \"Hello world!\",\n        created_at: \"1633573058520\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdaasd\",\n        pageId: \"67rdca3eeb7f6fgeed471817\",\n        userId: \"67rdca3eeb7f6fgdaasd3\",\n        content: \"Like it\",\n        created_at: \"1633573058520\"\n    }\n];\nif (!localStorage.getItem(\"comments\")) {\n    localStorage.setItem(\"comments\", JSON.stringify(comments));\n}\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(comments);\n        }, 200);\n    });\n\nconst fetchCommentsForChat = (chatId) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"comments\")).filter(\n                    (c) => c.pageId === chatId\n                )\n            );\n        }, 200);\n    });\nconst add = (data) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComment = {\n                ...data,\n                created_at: Date.now(),\n                _id: Math.random().toString(36).substr(2, 9)\n            };\n            comments.push(newComment);\n            localStorage.setItem(\"comments\", JSON.stringify(comments));\n            resolve(newComment);\n        }, 200);\n    });\n\nconst remove = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComments = comments.filter((x) => x._id !== id);\n            console.log(id);\n            console.log(newComments);\n            localStorage.setItem(\"comments\", JSON.stringify(newComments));\n            resolve(id);\n        }, 200);\n    });\nexport default {\n    fetchAll,\n    fetchCommentsForChat,\n    add,\n    remove\n};\n","import chats from \"./fake.api/chat.api\";\nimport comments from \"./fake.api/comments.api\";\nconst API = {\n    chats,\n    comments\n};\nexport default API;\n","import React, { useState, useEffect } from \"react\";\nimport api from \"../../../api\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst ChatListPageNew = () => {\n    const [chats, setChats] = useState();\n    useEffect(() => {\n        api.chats.fetchAll().then((data) => setChats(data));\n    }, []);\n    return (\n        <>\n            <div className=\"chat-list\">\n                {chats ? (\n                    chats.map((chat) => (\n                        <div className=\"nav-item\" key={chat._id}>\n                            <Link to={`/chats/${chat._id}`} key={chat._id}>\n                                {chat.name}\n                            </Link>\n                        </div>\n                    ))\n                ) : (\n                    <div>Loading...</div>\n                )}\n            </div>\n        </>\n    );\n};\n\nChatListPageNew.propTypes = {\n    chats: PropTypes.array\n};\nexport default ChatListPageNew;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ChatCard = ({ chat }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body\">\n                <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n                    <img src={chat.image} width=\"100\" />\n                    <div className=\"mt-3\">\n                        <h4>{chat.name}</h4>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nChatCard.propTypes = {\n    chat: PropTypes.object\n};\n\nexport default ChatCard;\n","export function displayDate(data) {\n    const date = new Date(parseInt(data));\n    const dateNow = new Date();\n    const yearDif = dateNow.getFullYear() - date.getFullYear();\n    if (yearDif === 0) {\n        const dayDif = dateNow.getDate() - date.getDate();\n        if (dayDif === 0) {\n            const hourDif = dateNow.getHours() - date.getHours();\n            if (hourDif === 0) {\n                const minutesDif = dateNow.getMinutes() - date.getMinutes();\n\n                if (minutesDif >= 0 && minutesDif < 1) return \"1 минуту назад\";\n                if (minutesDif >= 5 && minutesDif < 10) return \"5 минут назад\";\n                if (minutesDif >= 10 && minutesDif < 30) {\n                    return \"10 минут назад\";\n                }\n                return \"30 минут назад\";\n            }\n            return `${date.getHours()}:${date.getMinutes()}`;\n        }\n\n        return `${date.getDate()} ${date.toLocaleString(\"default\", {\n            month: \"long\"\n        })}`;\n    }\n    return (\n        date.getFullYear() + \".\" + (date.getMonth() + 1) + \"_\" + date.getDate()\n    );\n}\n","const users = [\n    {\n        _id: \"67rdca3eeb7f6fg1\",\n        name: \"John\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdasd2\",\n        name: \"Melany\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdaasd3\",\n        name: \"Howard\"\n    }\n];\nif (!localStorage.getItem(\"users\")) {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n}\nconst fetchAllUsers = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(users);\n        }, 200);\n    });\n\nconst addUser = (data) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const users = JSON.parse(localStorage.getItem(\"users\"));\n            const newUser = {\n                ...data,\n                created_at: Date.now()\n            };\n            users.push(newUser);\n            localStorage.setItem(\"users\", JSON.stringify(users));\n            resolve(newUser);\n        }, 200);\n    });\n\nconst getUserById = (id) => {\n    const users = JSON.parse(localStorage.getItem(\"users\"));\n    const userName = users.find((u) => u._id === id);\n    return userName;\n};\n\nexport { fetchAllUsers, addUser, getUserById };\n","const CURRENT_USER = \"currentUser\";\n\nexport function authUser(userData) {\n    return sessionStorage.setItem(CURRENT_USER, JSON.stringify(userData));\n}\n\nexport function getUser() {\n    const obj = sessionStorage.getItem(CURRENT_USER);\n    return JSON.parse(obj);\n}\n\nexport function removeUser() {\n    return sessionStorage.removeItem(CURRENT_USER);\n}\n\nconst sessionStorageService = {\n    authUser,\n    getUser,\n    removeUser\n};\n\nexport default sessionStorageService;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { displayDate } from \"../../../utils/displayDate\";\nimport API from \"../../../api\";\nimport { getUserById } from \"../../../api/fake.api/users.api\";\nimport { getUser } from \"../../../utils/sessionStorage.service\";\nconst Comment = ({\n    content,\n    created_at: created,\n    _id: id,\n    userId,\n    chatId,\n    onRemove\n}) => {\n    const currentUser = getUser();\n    const user = getUserById(userId);\n    const [chat, setChat] = useState();\n    const [isLoading, setIsLoading] = useState(false);\n    useEffect(() => {\n        setIsLoading(true);\n        API.chats.getById(chatId).then((data) => {\n            setChat(data);\n            setIsLoading(false);\n        });\n    }, []);\n\n    return (\n        <div className=\"bg-light card-body  mb-1\">\n            <div className=\"row\">\n                {isLoading ? (\n                    \"Loading ...\"\n                ) : (\n                    <div className=\"col\">\n                        <div className=\"d-flex flex-start \">\n                            <img\n                                src={`https://avatars.dicebear.com/api/avataaars/${(\n                                    Math.random() + 1\n                                )\n                                    .toString(36)\n                                    .substring(7)}.svg`}\n                                className=\"rounded-circle shadow-1-strong me-3\"\n                                alt=\"avatar\"\n                                width=\"30\"\n                                height=\"30\"\n                            />\n                            <div className=\"flex-grow-1 flex-shrink-1\">\n                                <div className=\"mb-4\">\n                                    <div className=\"d-flex justify-content-between align-items-center\">\n                                        <p className=\"mb-1 \">\n                                            {chat && chat.name}{\" \"}\n                                            <span className=\"small\">\n                                                <span>{user.name} </span>\n                                                {displayDate(created)}\n                                            </span>\n                                        </p>\n                                        {currentUser._id === userId ? (\n                                            <button\n                                                className=\"btn btn-sm text-primary d-flex align-items-center\"\n                                                onClick={() => onRemove(id)}\n                                            >\n                                                <i className=\"bi bi-x-lg\"></i>\n                                            </button>\n                                        ) : null}\n                                    </div>\n                                    <p className=\"small mb-0\">{content}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\nComment.propTypes = {\n    content: PropTypes.string,\n    edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    chatId: PropTypes.string,\n    userId: PropTypes.string,\n    onRemove: PropTypes.func,\n    _id: PropTypes.string\n};\n\nexport default Comment;\n","import React from \"react\";\nimport Comment from \"./comment\";\nimport PropTypes from \"prop-types\";\n\nconst CommentsList = ({ comments, onRemove }) => {\n    return comments.map((comment) => (\n        <Comment key={comment._id} {...comment} onRemove={onRemove} />\n    ));\n};\nCommentsList.propTypes = {\n    comment: PropTypes.array,\n    onRemove: PropTypes.func\n};\n\nexport default CommentsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextAreaField = ({ name, value, onChange, error }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    return (\n        <div className=\"mb-4\">\n            <div className=\"input-group has-validation\">\n                <textarea\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextAreaField.defaultProps = {\n    type: \"text\"\n};\nTextAreaField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextAreaField;\n","import React, { useState } from \"react\";\nimport TextAreaField from \"../form/textAreaField\";\nimport PropTypes from \"prop-types\";\nconst initialData = { chatId: \"\", content: \"\" };\n\nconst AddCommentForm = ({ onSubmit }) => {\n    const [data, setData] = useState(initialData);\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n\n    const clearForm = () => {\n        setData(initialData);\n        setErrors({});\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit(data);\n        clearForm();\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <TextAreaField\n                    value={data.content}\n                    onChange={handleChange}\n                    name=\"content\"\n                    label=\"Сообщение\"\n                    error={errors.content}\n                />\n                <div className=\"d-flex justify-content-end\">\n                    <button className=\"btn btn-primary\">Отправить</button>\n                </div>\n            </form>\n        </div>\n    );\n};\nAddCommentForm.propTypes = {\n    onSubmit: PropTypes.func\n};\n\nexport default AddCommentForm;\n","import CommentsList from \"./commentsList\";\nimport AddCommentForm from \"./addCommentForm\";\nexport default CommentsList;\nexport { AddCommentForm };\n","import { orderBy } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport api from \"../../api\";\nimport { useParams } from \"react-router-dom\";\nimport CommentsList, { AddCommentForm } from \"../common/comments\";\nimport { getUser } from \"../../utils/sessionStorage.service\";\n\nconst Comments = () => {\n    const currentUser = getUser();\n    const { chatId } = useParams();\n    const [comments, setComments] = useState([]);\n    useEffect(() => {\n        api.comments\n            .fetchCommentsForChat(chatId)\n            .then((data) => setComments(data));\n        window.addEventListener(\"storage\", () => {\n            api.comments\n                .fetchCommentsForChat(chatId)\n                .then((data) => setComments(data));\n        });\n        return () => {\n            window.removeEventListener(\"storage\", () =>\n                alert(\"listenerremoved\")\n            );\n        };\n    }, []);\n    const handleSubmit = (data) => {\n        api.comments\n            .add({ ...data, pageId: chatId, userId: currentUser._id })\n            .then((data) => setComments([...comments, data]));\n    };\n    const handleRemoveComment = (id) => {\n        api.comments.remove(id).then((id) => {\n            setComments(comments.filter((x) => x._id !== id));\n        });\n    };\n    const sortedComments = orderBy(comments, [\"created_at\"], [\"asc\"]);\n    return (\n        <>\n            {sortedComments && (\n                <div className=\"card mb-3\">\n                    <div className=\"card-body\" style={{ maxHeight: \"80%\" }}>\n                        <CommentsList\n                            comments={sortedComments}\n                            onRemove={handleRemoveComment}\n                        />\n                    </div>\n                    <div className=\"card-body \">\n                        <AddCommentForm onSubmit={handleSubmit} />\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Comments;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getUser } from \"../../utils/sessionStorage.service\";\nconst NavBar = () => {\n    const currentUser = getUser();\n    return (\n        <ul className=\"nav\">\n            {currentUser ? (\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link \" aria-current=\"page\" to=\"/chats\">\n                        Rooms\n                    </Link>\n                </li>\n            ) : null}\n        </ul>\n    );\n};\n\nexport default NavBar;\n","import ChatPage from \"./chatPage\";\nexport default ChatPage;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../../api\";\nimport ChatCard from \"../../ui/chatCard\";\nimport Comments from \"../../ui/comments\";\nimport NavBar from \"../../ui/navBar\";\n\nconst ChatPage = ({ chatId }) => {\n    const [chat, setChat] = useState();\n\n    useEffect(() => {\n        api.chats.getById(chatId).then((data) => setChat(data));\n    }, []);\n\n    if (chat) {\n        return (\n            <>\n                <NavBar />\n                <div className=\"container\">\n                    <div className=\"row gutters-sm\">\n                        <div className=\"col-md-4 mb-3\">\n                            <ChatCard chat={chat} />\n                        </div>\n                        <div className=\"col-md-8\">\n                            <Comments />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    } else {\n        return <div className=\"chat-list\">Loading...</div>;\n    }\n};\n\nChatPage.propTypes = {\n    chatId: PropTypes.string.isRequired\n};\n\nexport default ChatPage;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ChatListPageNew from \"../components/page/chatPageList/chatListPageNew\";\nimport ChatPage from \"../components/page/chatPage\";\nconst Chats = () => {\n    const params = useParams();\n    const { chatId } = params;\n    return <>{chatId ? <ChatPage chatId={chatId} /> : <ChatListPageNew />}</>;\n};\n\nexport default Chats;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}>{label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectField = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options,\n    error,\n    name\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.values(options)\n            : options;\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name} className=\"form-label\">\n                {label}\n            </label>\n            <select\n                className={getInputClasses()}\n                id={name}\n                name={name}\n                value={value}\n                onChange={handleChange}\n            >\n                <option disabled value=\"\">\n                    {defaultOption}\n                </option>\n                {optionsArray.length > 0 &&\n                    optionsArray.map((option) => (\n                        <option value={option.value} key={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n            </select>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\n\nSelectField.propTypes = {\n    defaultOption: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    name: PropTypes.string\n};\n\nexport default SelectField;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport getRandomAvatar from \"../../utils/getRandomAvatar\";\nimport API from \"../../api\";\nimport SelectField from \"../common/form/selectField\";\nimport { useHistory } from \"react-router-dom\";\nimport { authUser } from \"../../utils/sessionStorage.service\";\nimport { addUser } from \"../../api/fake.api/users.api\";\n\nconst RegisterForm = () => {\n    const [data, setData] = useState({\n        name: \"\",\n        chatId: \"\"\n    });\n\n    const history = useHistory();\n\n    const [errors, setErrors] = useState({});\n    const [chats, setChats] = useState({});\n    useEffect(() => {\n        API.chats.fetchAll().then(setChats);\n    }, []);\n    const arrayOfChats =\n        chats &&\n        Object.keys(chats).map((chatId) => ({\n            label: chats[chatId].name,\n            value: chats[chatId]._id\n        }));\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n        console.log(data);\n    };\n    const validatorConfig = {\n        name: {\n            isRequired: {\n                message: \"Name is required\"\n            },\n            min: {\n                message: \"Имя должно состоять минимум из 3 символов\",\n                value: 3\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const newData = {\n            ...data,\n            image: getRandomAvatar(),\n            created_at: Date.now(),\n            _id: Math.random().toString(36).substr(2, 9)\n        };\n        console.log(newData, \"registrationData\");\n        history.push(`/chats/${data.chatId}`);\n        authUser(newData);\n        addUser(newData);\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4 bg-light\">\n                    <h4 className=\"mb-3\">Registration</h4>\n                    <form onSubmit={handleSubmit}>\n                        <TextField\n                            label=\"Name\"\n                            name=\"name\"\n                            value={data.name}\n                            onChange={handleChange}\n                            error={errors.name}\n                        />\n                        <SelectField\n                            label=\"Room\"\n                            onChange={handleChange}\n                            options={arrayOfChats}\n                            name=\"chatId\"\n                            value={data.chatId}\n                            defaultOption=\"Выберите чат\"\n                            error={errors.chatId}\n                        />\n                        <button\n                            className=\"btn btn-primary w-100 mx-auto\"\n                            type=\"submit\"\n                            disabled={!isValid}\n                        >\n                            Enter\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RegisterForm;\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\": {\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                statusValidate = !emailRegExp.test(data);\n                break;\n            }\n            case \"isCapitalSymbol\": {\n                const capitalRegExp = /[A-Z]+/g;\n                statusValidate = !capitalRegExp.test(data);\n                break;\n            }\n            case \"isContainDigit\": {\n                const digitRegExp = /\\d+/g;\n                statusValidate = !digitRegExp.test(data);\n                break;\n            }\n            case \"min\": {\n                statusValidate = data.length < config.value;\n                break;\n            }\n            default:\n                break;\n        }\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","export default function getRandomAvatar() {\n    return (\n        `https://avatars.dicebear.com/api/avataaars/${(\n            Math.random() + 1\n        )\n            .toString(36)\n            .substring(7)}.svg`\n    );\n}\n","import React from \"react\";\nimport { getUser } from \"../utils/sessionStorage.service\";\nimport { useHistory } from \"react-router-dom\";\nimport RegisterFormNew from \"../components/ui/registerFormNew\";\n\nconst Main = () => {\n    const currentUser = getUser();\n    const history = useHistory();\n\n    return <> {currentUser ? history.push(\"/chats\") : <RegisterFormNew />}</>;\n};\n\nexport default Main;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport RegisterFormNew from \"../components/ui/registerFormNew\";\nimport { getUser } from \"../utils/sessionStorage.service\";\n\nconst Register = () => {\n    const history = useHistory();\n    const isAuth = getUser();\n    console.log(isAuth);\n\n    if (isAuth) {\n        history.push(\"/chats\");\n    }\n\n    return (\n        <div className=\"my-5\">\n            <RegisterFormNew />\n        </div>\n    );\n};\n\nexport default Register;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Chats from \"./layouts/chats\";\nimport Main from \"./layouts/main\";\nimport Register from \"./layouts/register\";\n\nfunction App() {\n    return (\n        <div>\n            <Switch>\n                <Route path=\"/chats/:chatId?/:edit?\" component={Chats} />\n                <Route path=\"/register\" component={Register} />\n                <Route path=\"/\" exact component={Main} />\n                <Redirect to=\"/\" />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter basename=\"/webChat\">\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}